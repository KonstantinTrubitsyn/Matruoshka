services:
  frontend:
    build:
      context: ./frontend
    container_name: frontend
    networks:
      - app_network
    ports:
      - "8080:80"
    restart: unless-stopped

  postgres:
    container_name: postgres
    image: postgres:16.3-alpine
    environment:
      POSTGRES_USER: app_user
      POSTGRES_PASSWORD: app_password
      POSTGRES_DB: app_db
    networks:
      - app_network
    ports:
      - "5432:5432"
    volumes:
      - ./backend/resources/schema.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB} -h localhost" ]
      interval: 2s
      timeout: 1s
      retries: 5

  backend:
    build:
      context: ./backend
    container_name: backend
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: app_db
      DB_USER: app_user
      DB_PASSWORD: app_password
    networks:
      - app_network
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "5050:5050"
    restart: unless-stopped

networks:
  app_network:
    driver: bridge